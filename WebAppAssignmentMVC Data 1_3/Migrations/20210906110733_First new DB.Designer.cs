// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppAssignmentMVC_Data_1_3.Data;

namespace WebAppAssignmentMVC_Data_1_3.Migrations
{
    [DbContext(typeof(PeopleDbContext))]
    [Migration("20210906110733_First new DB")]
    partial class FirstnewDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAppAssignmentMVC_Data_1_3.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.HasKey("CityId")
                        .HasName("PrimaryKey_CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("WebAppAssignmentMVC_Data_1_3.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId")
                        .HasName("PrimaryKey_CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("WebAppAssignmentMVC_Data_1_3.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityForeignKey")
                        .HasColumnType("int");

                    b.Property<string>("PersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId")
                        .HasName("PrimaryKey_PersonId");

                    b.HasIndex("CityForeignKey");

                    b.ToTable("People");
                });

            modelBuilder.Entity("WebAppAssignmentMVC_Data_1_3.Models.City", b =>
                {
                    b.HasOne("WebAppAssignmentMVC_Data_1_3.Models.Country", null)
                        .WithMany("Cities")
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("WebAppAssignmentMVC_Data_1_3.Models.Person", b =>
                {
                    b.HasOne("WebAppAssignmentMVC_Data_1_3.Models.City", "City")
                        .WithMany("People")
                        .HasForeignKey("CityForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
